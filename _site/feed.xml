<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kinyanjui Wangonya</title>
    <description>Kinyanjui Wangonya ia a javascript coder, web, and mobile app developer. Here's his blog and portfolio</description>
    <link>http://localhost:4000</link>
    
      
        <item>
          <title>Taking advantage of conventions in web design</title>
          <description>&lt;p&gt;I was recently pointed to a very interesting principle I hadn‚Äôt come across before: &lt;a href=&quot;https://en.m.wikipedia.org/wiki/Principle_of_least_astonishment&quot;&gt;The principle of least astonishment&lt;/a&gt;. Basically, what the principle states is that ‚ÄúIf a necessary feature has a high astonishment factor, &lt;em&gt;(astonishment factor here being an element of surprise)&lt;/em&gt;, it may be necessary to redesign the feature. People are part of the system. The design should match the user‚Äôs experience, expectations, and mental models.‚Äù&lt;/p&gt;

&lt;p&gt;Though it isn‚Äôt mentioned in &lt;a href=&quot;https://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=2RQ8KQECKSST8TY6A745&amp;amp;dpID=51pnouuPO5L&amp;amp;preST=_SX218_BO1,204,203,200_QL40_&amp;amp;dpSrc=detail&quot;&gt;the book&lt;/a&gt;, I think that principle really fits this section well. When people use your app, they expect stuff to be at certain places. Just imagine what your reaction would have been like the first time you logged in to dev.to if you found the DEV logo on the right side of the navbar. Or if the search-bar was somewhere in the footer. Coming from somewhat similar websites that existed before dev.to, we expected it to feel similar to what we were already accustomed to. That‚Äôs why no one needs a tutorial on how to navigate the site.&lt;/p&gt;

&lt;p&gt;Other conventions include things like:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;link styling: where &lt;a href=&quot;#&quot;&gt;this&lt;/a&gt; is obviously a link,&lt;/li&gt;
  &lt;li&gt;proper colours for success, warning, info &amp;amp; error messages, and&lt;/li&gt;
  &lt;li&gt;visual hierarchies: where,
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;THIS IS MORE IMPORTANT&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;em&gt;Than this&lt;/em&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;but-what-about-being-original&quot;&gt;But what about being original?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/37j6k15tlf2dyotgjf0k.jpg&quot; alt=&quot;be original&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just kidding üòÖ. The fact that using conventions is recommended does‚Äôt mean you can‚Äôt be original. You just need to understand the rules before you can break them. The key is to find that sweet spot between trying out something new and conforming to conventions.&lt;/p&gt;

&lt;p&gt;Here‚Äôs what Krug recommends:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you‚Äôre not going to use an existing Web convention, you need to be sure that what you‚Äôre replacing it with either:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;is so clear and self-explanatory that there‚Äôs no learning curve‚Äîso it‚Äôs as good as the convention, or&lt;/li&gt;
    &lt;li&gt;adds so much value that it‚Äôs worth a small learning curve.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Innovate when you know you have a better idea, but take advantage of conventions when you don‚Äôt.&lt;/p&gt;
</description>
          <pubDate>2018-09-12T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/web-conventions</link>
          <guid isPermaLink="true">http://localhost:4000/web-conventions</guid>
        </item>
      
    
      
        <item>
          <title>How we really use the web</title>
          <description>&lt;p&gt;If your going to design for users, its important to know how users use the web. People don‚Äôt really read through stuff on pages. They glance and scan through, &amp;amp; only stop to pay attention when something catches their attention.&lt;/p&gt;

&lt;p&gt;Remember the last time you bought something online? How did you use the site? You probably didn‚Äôt go reading all the descriptions of your product of interest, comparing specs and prices till you got just the right one. You got to the site, didn‚Äôt even take a look at anything else, went straight for the search bar. Typed your item, got results. I bet you didn‚Äôt even read the names, just looked at pictures, and prices. If prices were mostly similar, you concentrated on pictures. The photo that caught your attention most, you clicked on, and probably bought.&lt;/p&gt;

&lt;p&gt;(I‚Äôve also noticed that you can tell whether a person is doing something useful on their phones or not without looking at their screen or their facial expressions ‚Äî just their scrolling activity. If its something useful, like reading an ebook, the scrolling will be slow and consistent. If not really important, like just browsing social media for example, they‚Äôll be scrolling really fast, and stopping the screen scroll motion midway when there‚Äôs a picture/gif/video. Rarely does anyone stop for just plain text on such sites. But I digress.)&lt;/p&gt;

&lt;p&gt;That‚Äôs why I‚Äôm a big fan of landing pages that take a minimalist approach with lots of white space and focus on product.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.creative-tim.com/presentation&quot;&gt;Creative tim presentation landing page&lt;/a&gt;
&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/gtq5bdml7hiizm1b8mer.png&quot; alt=&quot;creative tim presentation landing page&quot; /&gt;
&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/xzyy7ljl4krjjc70hrsx.png&quot; alt=&quot;creative tim presentation landing page2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What caught your eye in the pictures above? I bet you concentrated on the right side, where the images are. I know the text isn‚Äôt that clear on the screenshots but lets be honest, who even tried reading the text? ü§öüèΩ Maybe just the header texts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apple.com&quot;&gt;A very obvious example&lt;/a&gt;
&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/p1u49dyyk66apfvft41n.png&quot; alt=&quot;apple iphone&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/mro8kmowtb64vwn6ezjh.png&quot; alt=&quot;apple ipad&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-points&quot;&gt;Key points&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;When designing, make sure what‚Äôs really important pops out and catches attention. Calls to action and such like things of importance should appear prominently.&lt;/li&gt;
  &lt;li&gt;Don‚Äôt give the users too many options. They won‚Äôt go through all of them anyway (see &lt;a href=&quot;https://www.nngroup.com/articles/satisficing/&quot;&gt;satisficing&lt;/a&gt;), and may end up missing what they really wanted.&lt;/li&gt;
  &lt;li&gt;Borrowing from the last chapter, if you can‚Äôt make something self evident, then make it self explanatory. There‚Äôs really no need for making up for poor design with good documentation or user manuals. People want to try things out and figure it out for themselves with minimal to no risks. Make it easy for them to.&lt;/li&gt;
&lt;/ul&gt;
</description>
          <pubDate>2018-09-10T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/how-we-use-web</link>
          <guid isPermaLink="true">http://localhost:4000/how-we-use-web</guid>
        </item>
      
    
      
        <item>
          <title>The first law of usability</title>
          <description>&lt;h2 id=&quot;krugs-first-law-of-usability-dont-make-me-think&quot;&gt;Krug‚Äôs first law of usability: Don‚Äôt make me think!&lt;/h2&gt;
&lt;p&gt;If you want to make your app or site easy to use, don‚Äôt make people think. As far as humanly possible, make it self-evident. Obvious. Self-explanatory.&lt;/p&gt;

&lt;p&gt;A user with absolutely no previous knowledge or interest on your site should be able to take a first look and think, ‚ÄúOh, its a &lt;strong&gt;__&lt;/strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;em&gt;. Ok, there‚Äôs the &lt;strong&gt;__&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;__&lt;/strong&gt;. And that‚Äôs a &lt;strong&gt;__&lt;/strong&gt;&lt;strong&gt;__&lt;/strong&gt;_. Here‚Äôs the thing that I want‚Ä¶‚Äù&lt;/p&gt;

&lt;p&gt;The moment the user thinks, ‚ÄúBut how do I &lt;strong&gt;__&lt;/strong&gt;&lt;strong&gt;__&lt;/strong&gt;&lt;em&gt;? Now, where‚Äôs the &lt;strong&gt;__&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;__&lt;/strong&gt;? Is this a &lt;strong&gt;__&lt;/strong&gt;&lt;strong&gt;__&lt;/strong&gt;_?‚Äù then you‚Äôre making them think and chances are, if there‚Äôs a similar site or app, they won‚Äôt be staying on yours very long.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/wh7gw1ll2hlm1zl5lhzj.jpg&quot; alt=&quot;competition&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every question mark adds to the users cognitive workload, distracting them from the task at hand, and no one wants that.&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&quot;thinking-vs-not-thinking&quot;&gt;Thinking vs Not thinking&lt;/h3&gt;
&lt;p&gt;Thinking&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/2n8olod9gyt2ig2qrbbd.jpg&quot; alt=&quot;thinking&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Not thinking&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/s0txd8yifh39urb9xua6.jpg&quot; alt=&quot;not-thinking&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thinking&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/m09q4s9u44wzf50i9bga.jpg&quot; alt=&quot;thinking&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Not thinking&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/x4sjeol5g0rxfgbixhfo.jpg&quot; alt=&quot;not-thinking&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;things-that-make-us-think&quot;&gt;Things that make us think&lt;/h3&gt;
&lt;p&gt;Naming&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/r28tg8aif018jf8odcls.jpg&quot; alt=&quot;naming&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Links and buttons that aren‚Äôt obviously clickable&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thepracticaldev.s3.amazonaws.com/i/yuc76fj24zyw16t6zbkx.jpg&quot; alt=&quot;identifiability&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Making every page or screen self-evident is like having good lighting in a store: it just makes everything seem better&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;key-points&quot;&gt;Key points&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;get rid of all the question marks&lt;/li&gt;
  &lt;li&gt;design such that the average user ‚Äúgets it‚Äù without having to think about it&lt;/li&gt;
  &lt;li&gt;if you can‚Äôt make something self-evident (i.e not needing to be demonstrated or explained; obvious), you at least need to make it self-explanatory (easily understood)&lt;/li&gt;
&lt;/ul&gt;
</description>
          <pubDate>2018-09-09T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/first-law-of-usability</link>
          <guid isPermaLink="true">http://localhost:4000/first-law-of-usability</guid>
        </item>
      
    
      
        <item>
          <title>Javascript lookaheads and lookbehinds</title>
          <description>&lt;p&gt;Regular expressions (also called regex) are patterns used to match character combinations in strings. They help us work with strings in a very performant way.&lt;/p&gt;

&lt;p&gt;By formulating regex with a special syntax, you can:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;search text in a string&lt;/li&gt;
  &lt;li&gt;replace substrings in a string&lt;/li&gt;
  &lt;li&gt;extract information from a string&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If all this is completely new to you, take a look at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;mdn web docs&lt;/a&gt; for more info.&lt;/p&gt;

&lt;p&gt;For this post, I‚Äôll focus on one of the easier (and very useful) ways you can use regex.&lt;/p&gt;

&lt;h4 id=&quot;lookaheads-match-a-string-depending-on-what-follows-it&quot;&gt;Lookaheads: match a string depending on what follows it&lt;/h4&gt;
&lt;h5 id=&quot;format-xy&quot;&gt;Format: &lt;code class=&quot;highlighter-rouge&quot;&gt;x(?=y)&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x(?=y)&lt;/code&gt; matches ‚Äòx‚Äô only if ‚Äòx‚Äô is followed by ‚Äòy‚Äô.
Let‚Äôs see an example:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// check to see if we have the right 'Kanye'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// /Kanye(?= West)/ : the string 'Kanye' must be followed by 'West'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false. we cant really be sure it's the right Kanye&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye East will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false. Kanye who???&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can also do &lt;code class=&quot;highlighter-rouge&quot;&gt;/Kanye(?= West | East)/&lt;/code&gt; to match Kanye if it‚Äôs followed by either ‚ÄòEast‚Äô or ‚ÄòWest‚Äô.&lt;/p&gt;

&lt;h5 id=&quot;format-xy-1&quot;&gt;Format: &lt;code class=&quot;highlighter-rouge&quot;&gt;x(?!y)&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x(?!y)&lt;/code&gt; performs the inverse operation, matching ‚Äòx‚Äô only if ‚Äòx‚Äô is &lt;strong&gt;not&lt;/strong&gt; followed by ‚Äòy‚Äô. This is called a negated lookahead.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// we want a different 'Kanye'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// /Kanye(?! West)/ : the string 'Kanye' must not be followed by 'West'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true. might be West, but I'll just take the risk and see&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye East will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true. let's give the new guy a chance&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lookbehinds-match-a-string-depending-on-what-precedes-it&quot;&gt;Lookbehinds: match a string depending on what precedes it&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;This is an &lt;a href=&quot;https://github.com/tc39/proposal-regexp-lookbehind&quot;&gt;ES2018&lt;/a&gt; feature&lt;/strong&gt; üéâüéäüöÄüé∏ü§òüèæ&lt;/p&gt;
&lt;h5 id=&quot;format-yx&quot;&gt;Format: &lt;code class=&quot;highlighter-rouge&quot;&gt;(?&amp;lt;=y)x&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(?&amp;lt;=y)x&lt;/code&gt; matches ‚Äòx‚Äô only if it‚Äôs preceded by ‚Äòy‚Äô&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// check to see if we have the right 'Kanye West'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// /(?&amp;lt;= Kanye) West/ : the string 'West' must be preceded by 'Kanye'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false. we cant really be sure it's the right West &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Keith West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;format-yx-1&quot;&gt;Format: &lt;code class=&quot;highlighter-rouge&quot;&gt;(?&amp;lt;!y)x&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(?&amp;lt;!y)x&lt;/code&gt; matches ‚Äòx‚Äô only if it‚Äôs &lt;strong&gt;not&lt;/strong&gt; preceded by ‚Äòy‚Äô&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// check to see if we have another 'West'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// /(?&amp;lt;= Kanye) West/ : the string 'West' must be not be preceded by 'Kanye'&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Keith West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Kanye&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;West&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I heard Kanye West will be performing tonight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There you have it üòÑ. Regex might be a bit hard to master, but once you do, you‚Äôll find that it makes working with strings so much easier.&lt;/p&gt;
</description>
          <pubDate>2018-08-30T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/lookaheads-lookbehinds</link>
          <guid isPermaLink="true">http://localhost:4000/lookaheads-lookbehinds</guid>
        </item>
      
    
      
        <item>
          <title>Javascript array iteration with some() and every()</title>
          <description>&lt;p&gt;If you‚Äôre using an array in your code, chances are, you‚Äôll need to iterate over the values in the array. There‚Äôs a couple of ways you can do that, some better and more efficient than others depending on what you want to accomplish.&lt;/p&gt;

&lt;p&gt;For this post, I‚Äôll focus on two ways: &lt;code class=&quot;highlighter-rouge&quot;&gt;some()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;every()&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;some&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;some()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;some()&lt;/code&gt; method tests whether &lt;strong&gt;at least one&lt;/strong&gt; element in the array passes the test implemented by the provided function. It checks the elements one by one, and if it finds an array element where the function returns a truthy value, &lt;code class=&quot;highlighter-rouge&quot;&gt;some()&lt;/code&gt; returns &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; and does not check the remaining values. Otherwise it returns &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets say you want to check if a contact exists in your contact list:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contacts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Stewie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Meg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Quagmire'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cleveland'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkContacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;checkContacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Lois'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;checkContacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contacts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Meg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;When checking for &lt;code class=&quot;highlighter-rouge&quot;&gt;Lois&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;some()&lt;/code&gt; checks the array elements beginning at &lt;code class=&quot;highlighter-rouge&quot;&gt;Stewie&lt;/code&gt; to the end, and having not found a match, returns &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;. When checking for &lt;code class=&quot;highlighter-rouge&quot;&gt;Meg&lt;/code&gt;, it stops at &lt;code class=&quot;highlighter-rouge&quot;&gt;Meg&lt;/code&gt; and returns &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, ignoring the rest of the elements.&lt;/p&gt;

&lt;h4 id=&quot;every&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;every()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;This method tests whether &lt;strong&gt;all&lt;/strong&gt; elements in the array pass the test implemented by the provided function. It checks the elements one by one, and if it finds an array element where the function returns a falsy value, &lt;code class=&quot;highlighter-rouge&quot;&gt;every()&lt;/code&gt; returns &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; and does not check the remaining values. Otherwise it returns &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets check if all the names in our contacts list have more than 3 characters:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Stewie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Meg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Quagmire'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cleveland'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Stewie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Megan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Quagmire'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cleveland'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The first test returns &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; since &lt;code class=&quot;highlighter-rouge&quot;&gt;Meg&lt;/code&gt; has only 3 characters. Remember: for &lt;code class=&quot;highlighter-rouge&quot;&gt;every()&lt;/code&gt;, &lt;em&gt;all&lt;/em&gt; the elements in the array have to be truthy for it to return &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;. Changing &lt;code class=&quot;highlighter-rouge&quot;&gt;Meg&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Megan&lt;/code&gt; in the second test therefore returns &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These two methods can come in handy if you need to perform somewhat similar tasks as described above. But of course, they‚Äôre not the only way.&lt;/p&gt;
</description>
          <pubDate>2018-08-28T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/array-iteration</link>
          <guid isPermaLink="true">http://localhost:4000/array-iteration</guid>
        </item>
      
    
      
        <item>
          <title>Finding an element in the array (the ES5, ES6 and ES7 way)</title>
          <description>&lt;p&gt;Say you want to check if a specific element exists in an array. There‚Äôs a couple of ways to do that:&lt;/p&gt;

&lt;h4 id=&quot;es5&quot;&gt;ES5&lt;/h4&gt;
&lt;h5 id=&quot;indexof&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;indexOf()&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;indexOf&lt;/code&gt; returns the index of the first matching item found, or &lt;code class=&quot;highlighter-rouge&quot;&gt;-1&lt;/code&gt; if not found.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// check if a Fortnite ninja exists in the array&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Alchemist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Assassin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -1 (doesn't exist)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;lastindexof&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lastIndexOf()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lastIndexOf()&lt;/code&gt; returns the index of the last matching item found, or &lt;code class=&quot;highlighter-rouge&quot;&gt;-1&lt;/code&gt; if not found.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// check if a Fortnite ninja exists in the array&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// note that 'Brawler' exists twice&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Alchemist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Stonefoot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4 (last one returned)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Assassin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -1 (doesn't exist)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;es6&quot;&gt;ES6&lt;/h4&gt;
&lt;h5 id=&quot;find&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find()&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;find()&lt;/code&gt; method returns the &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;first&lt;/strong&gt; element in the array that satisfies the provided testing function. Otherwise undefined is returned.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Alchemist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {name: &quot;Harvester&quot;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Assassin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;findindex&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;findIndex()&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;Returns the &lt;strong&gt;index&lt;/strong&gt; of the &lt;strong&gt;first&lt;/strong&gt; element in the array that satisfies the provided testing function. Otherwise -1 is returned.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Alchemist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
               &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Assassin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;es7&quot;&gt;ES7&lt;/h4&gt;
&lt;h5 id=&quot;includes&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;includes()&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;includes()&lt;/code&gt; method determines whether an array includes a certain element, returning true or false as appropriate. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;a.includes(value)&lt;/code&gt; returns &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; if &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; contains &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Alchemist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Assassin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a.includes(value, i)&lt;/code&gt; returns true if &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; contains &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; &lt;strong&gt;after (or at) the position &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Alchemist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brawler'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Harvester'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ninjas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Skirmisher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
          <pubDate>2018-08-27T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/finding-elements</link>
          <guid isPermaLink="true">http://localhost:4000/finding-elements</guid>
        </item>
      
    
      
        <item>
          <title>this and arrow functions</title>
          <description>&lt;p&gt;Arrow functions were introduced in ES6 as a new syntax for writing Javascript functions. Thanks to their short syntax, they encourage the use of small functions, which make code look cleaner (and &lt;code class=&quot;highlighter-rouge&quot;&gt;() =&amp;gt;&lt;/code&gt; just looks cooler üòÑ).&lt;/p&gt;

&lt;p&gt;As a beginner just getting to wrap my head around ES6 syntax, I began using arrow functions &lt;strong&gt;everywhere&lt;/strong&gt; without really understanding how they worked. As you might expect, I ended up running into some problems, especially with the &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; keyword.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; can get a bit confusing sometimes as its value varies depending on the function‚Äôs execution context, and on the mode (strict or non-strict). Much has been written about the ins and outs of that so I‚Äôll just focus on one thing:&lt;/p&gt;

&lt;h4 id=&quot;how-this-works-in-arrow-functions&quot;&gt;How &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; works in arrow functions&lt;/h4&gt;
&lt;p&gt;In a regular function, &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; refers to the object when defined as a method of an object. We can therefor do:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;brunch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Dim sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;beverage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Jasmine tea'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`I'll have the &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; with &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beverage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; please.`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Calling &lt;code class=&quot;highlighter-rouge&quot;&gt;brunch.order()&lt;/code&gt; will return &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;I'll have the Dim sum with Jasmine tea please.&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs edit that and use an arrow function for &lt;code class=&quot;highlighter-rouge&quot;&gt;order:&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;brunch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Dim sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;beverage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Jasmine tea'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`I'll have the &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; with &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beverage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; please.`&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This time, calling &lt;code class=&quot;highlighter-rouge&quot;&gt;brunch.order()&lt;/code&gt; returns &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;I'll have the undefined with undefined please.&quot;&lt;/code&gt; Both &lt;code class=&quot;highlighter-rouge&quot;&gt;this.food&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;this.beverage&lt;/code&gt; return &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It worked with the normal function, so what‚Äôs going on? In the normal function, &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; was our &lt;code class=&quot;highlighter-rouge&quot;&gt;order&lt;/code&gt; object. When using an arrow function, &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; is not bound to anything and it just inherits from the parent scope which in this case is the window. Adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(this)&lt;/code&gt; before the &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; in the arrow function returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;Window&lt;/code&gt; object, so its looking for &lt;code class=&quot;highlighter-rouge&quot;&gt;Window.food&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Window.beverage&lt;/code&gt; which will obviously both be &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Arrow functions are therefor not suited as object methods.&lt;/p&gt;

&lt;p&gt;Another common problem area would be with event handlers. Here‚Äôs an example:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// change button colour on click
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.on&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Toggle&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// button&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'on'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In the code above, &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; refers to the button. Clicking on the button toggles the colour as expected. Change the function to an arrow function:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// change button colour on click
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.on&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Toggle&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Window { ... }&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'on'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; becomes the browser‚Äôs &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; attribute. Clicking the button will give a &lt;code class=&quot;highlighter-rouge&quot;&gt;TypeError&lt;/code&gt; error. If you rely on &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; in an event hanlder, a regular function may be necessary.&lt;/p&gt;

&lt;p&gt;So, as cool and popular as arrow functions may be, its best to understand how they work, and to know when to and not to use them.&lt;/p&gt;
</description>
          <pubDate>2018-08-26T00:00:00+03:00</pubDate>
          <link>http://localhost:4000/this-arrow-functions</link>
          <guid isPermaLink="true">http://localhost:4000/this-arrow-functions</guid>
        </item>
      
    
  </channel>
</rss>
